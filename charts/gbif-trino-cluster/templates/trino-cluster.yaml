apiVersion: trino.stackable.tech/v1alpha1
kind: TrinoCluster
metadata:
  name: {{ include "gbif-chart-lib.name" . }}
  namespace: {{ .Release.Namespace }}
spec:
  image:
{{ include "gbif-chart-lib.stackableImage" . | indent 4 }}
  clusterOperation:
    reconciliationPaused: {{ .Values.clusterOperation.reconciliationPaused }}
    stopped: {{ .Values.clusterOperation.stopped }}
  clusterConfig:
    listenerClass: {{ .Values.listenerClass }}
{{- if .Values.logging.enabled  }}     
    vectorAggregatorConfigMapName: {{ .Values.logging.discoveryMap }}
{{- end }}
    authentication:
    - authenticationClass: {{ include "gbif-chart-lib.name" . }}-{{ .Release.Namespace }}-auth
    catalogLabelSelector:
      matchLabels:
{{ include "gbif-chart-lib.selectorLabels" . | indent 8}}
  coordinators:
{{- if or .Values.yunikorn.enabled (or .Values.geocodeLayer.enabled .Values.customSecretBackend.enabled) }}
    podOverrides:
{{- if or .Values.yunikorn.enabled }}
      metadata:
        labels:
{{- include "gbif-chart-lib.yunikornLabels" . | nindent 10 }}
{{- end }}
{{- end }}
{{- if or .Values.geocodeLayer.enabled .Values.customSecretBackend.enabled }}
      spec:
{{- if or .Values.geocodeLayer.enabled }}
        containers:
        - name: trino
          volumeMounts:
          - name: gbif-geocode-layers
            mountPath: /gbif/geocode-layers
{{- end }}
        volumes:
{{- if or .Values.geocodeLayer.enabled }}
        - name: gbif-geocode-layers
          nfs:
            server: {{ .Values.geocodeLayer.server }}
            path: {{ .Values.geocodeLayer.mountPath }}
            readOnly: true
{{- end }}
{{- if .Values.customSecretBackend.enabled }}
        - name: "server-tls-mount"
          ephemeral:
            volumeClaimTemplate:
              metadata:
                annotations:
                  secrets.stackable.tech/class: {{ .Values.customSecretBackend.secretName }} 
                  secrets.stackable.tech/scope: node,pod
                  secrets.stackable.tech/format: tls-pkcs12
                  secrets.stackable.tech/backend.autotls.cert.lifetime: {{ .Values.customSecretBackend.lifetime }}
              spec:
                storageClassName: secrets.stackable.tech 
                accessModes: 
                  - ReadWriteOnce
                resources: 
                  requests:
                    storage: "1"
        - name: "internal-tls-mount"
          ephemeral:
            volumeClaimTemplate:
              metadata:
                annotations:
                  secrets.stackable.tech/class: {{ .Values.customSecretBackend.secretName }} 
                  secrets.stackable.tech/scope: node,pod
                  secrets.stackable.tech/format: tls-pkcs12
                  secrets.stackable.tech/backend.autotls.cert.lifetime: {{ .Values.customSecretBackend.lifetime }}
              spec:
                storageClassName: secrets.stackable.tech 
                accessModes: 
                  - ReadWriteOnce
                resources: 
                  requests:
                    storage: "1"
{{- end }}
{{- end }}
    roleGroups:
      default:
        replicas: {{ .Values.nodes.coordinator.replicas }}
        config:
          resources:
            cpu:
              min: {{ .Values.nodes.coordinator.cpu.min }}
              max: {{ .Values.nodes.coordinator.cpu.max }}
            memory:
              limit: {{ .Values.nodes.coordinator.memory }}
            storage:
              data:
                capacity: {{ .Values.nodes.coordinator.storage.capacity }}
{{- if .Values.storageClass }}
                storageClass: {{ .Values.storageClass }}
{{- end }}
{{- if .Values.logging.enabled  }}
          logging:
            enableVectorAgent: true
            containers:
              vector:
                file:
                  level: {{ .Values.logging.vectorLogLevel }}
              trino:
                console:
                  level: {{ .Values.nodes.coordinator.logLevel }}
                file:
                  level: {{ .Values.nodes.coordinator.logLevel }}
                loggers:
                  io.trino:
                    level: {{ .Values.nodes.coordinator.logLevel }}
{{- end }}
  workers:
    configOverrides:
      config.properties:
        query.max-memory-per-node: {{ .Values.memPerNode }}
        memory.heap-headroom-per-node: {{ .Values.memHeadroom }}
{{- if or .Values.yunikorn.enabled (or .Values.geocodeLayer.enabled .Values.customSecretBackend.enabled) }}
    podOverrides:
{{- if or .Values.yunikorn.enabled }}
      metadata:
        labels:
{{- include "gbif-chart-lib.yunikornLabels" . | nindent 10 }}
{{- end }}
{{- end }}
{{- if or .Values.geocodeLayer.enabled .Values.customSecretBackend.enabled }}
      spec:
{{- if or .Values.geocodeLayer.enabled }}
        containers:
        - name: trino
          volumeMounts:
          - name: gbif-geocode-layers
            mountPath: /gbif/geocode-layers
{{- end }}
        volumes:
{{- if or .Values.geocodeLayer.enabled }}
        - name: gbif-geocode-layers
          nfs:
            server: {{ .Values.geocodeLayer.server }}
            path: {{ .Values.geocodeLayer.mountPath }}
            readOnly: true
{{- end }}
{{- if .Values.customSecretBackend.enabled }}
        - name: "server-tls-mount"
          ephemeral:
            volumeClaimTemplate:
              metadata:
                annotations:
                  secrets.stackable.tech/class: {{ .Values.customSecretBackend.secretName }} 
                  secrets.stackable.tech/scope: node,pod
                  secrets.stackable.tech/format: tls-pkcs12
                  secrets.stackable.tech/backend.autotls.cert.lifetime: {{ .Values.customSecretBackend.lifetime }}
              spec:
                storageClassName: secrets.stackable.tech 
                accessModes: 
                  - ReadWriteOnce
                resources: 
                  requests:
                    storage: "1"
        - name: "internal-tls-mount"
          ephemeral:
            volumeClaimTemplate:
              metadata:
                annotations:
                  secrets.stackable.tech/class: {{ .Values.customSecretBackend.secretName }} 
                  secrets.stackable.tech/scope: node,pod
                  secrets.stackable.tech/format: tls-pkcs12
                  secrets.stackable.tech/backend.autotls.cert.lifetime: {{ .Values.customSecretBackend.lifetime }}
              spec:
                storageClassName: secrets.stackable.tech 
                accessModes: 
                  - ReadWriteOnce
                resources: 
                  requests:
                    storage: "1"
{{- end }}
{{- end }}
    roleGroups:
      default:
        replicas: {{ .Values.nodes.worker.replicas }}
        config:
          resources:
            cpu:
              min: {{ .Values.nodes.worker.cpu.min }}
              max: {{ .Values.nodes.worker.cpu.max }}
            memory:
              limit: {{ .Values.nodes.worker.memory }}
            storage:
              data:
                capacity: {{ .Values.nodes.worker.storage.capacity }}
{{- if .Values.storageClass }}
                storageClass: {{ .Values.storageClass }}
{{- end }}
{{- if .Values.logging.enabled  }}
          logging:
            enableVectorAgent: true
            containers:
              vector:
                file:
                  level: {{ .Values.logging.vectorLogLevel }}
              trino:
                console:
                  level: {{ .Values.nodes.worker.logLevel }}
                file:
                  level: {{ .Values.nodes.worker.logLevel }}
                loggers:
                  io.trino:
                    level: {{ .Values.nodes.worker.logLevel }}
{{- end }}