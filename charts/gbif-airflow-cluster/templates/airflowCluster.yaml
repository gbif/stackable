apiVersion: airflow.stackable.tech/v1alpha1
kind: AirflowCluster
metadata:
  name: {{ include "gbif-chart-lib.name" . }}
  namespace: {{ .Release.Namespace }}
spec:
  image:
{{ include "gbif-chart-lib.stackableImage" . | indent 4 }}
  clusterConfig:
    loadExamples: {{ .Values.examples }}
    exposeConfig: {{ .Values.exposeConfigs }}
    credentialsSecret: {{ include "gbif-chart-lib.name" . }}-credentials
{{- if .Values.git }}
    dagsGitSync: 
      - repo: {{ .Values.git.repository }} 
        branch: {{ .Values.git.branch }}
        gitFolder: {{ .Values.git.dagFolder }} 
        depth: {{ .Values.git.depth }}
        wait: {{ .Values.git.wait }}
{{- if .Values.git.auth }}
        credentialsSecret: {{ include "gbif-chart-lib.name" . }}-gitsync
{{- end }}
{{- end }}
{{- if .Values.logging.enabled  }}     
    vectorAggregatorConfigMapName: {{ .Values.logging.discoveryMap }}
{{- end }}
  webservers:
{{- if .Values.yunikorn.enabled }}
    podOverrides:
      metadata:
        labels:
{{- include "gbif-chart-lib.yunikornLabels" . | nindent 10 }}
{{- end }}
    roleGroups:
      default:
{{- if .Values.airflowEnvOverrides }}
{{- "envOverrides:" | nindent 8 }}
{{- tpl (.Values.airflowEnvOverrides | toYaml) . | nindent 10 }}
{{- end }}
        replicas: {{ .Values.nodes.webserver.replicas }}
        config:
          resources:
            cpu: 
              min: {{ .Values.nodes.webserver.cpu.min }}
              max: {{ .Values.nodes.webserver.cpu.max }}
            memory: 
              limit: {{ .Values.nodes.webserver.memory }}
{{- if .Values.logging.enabled  }}
          logging:
            enableVectorAgent: true
            containers:
              vector:
                file:
                  level: {{ .Values.logging.vectorLogLevel }}
              airflow:
                console:
                  level: {{ .Values.nodes.webserver.logLevel }}
                file:
                  level: {{ .Values.nodes.webserver.logLevel }}
                loggers:
                  "flask_appbuilder":
                    level: {{ .Values.nodes.webserver.logLevel }}
{{- end }}
  celeryExecutors:
{{- if .Values.yunikorn.enabled }}
    podOverrides:
      metadata:
        labels:
{{- include "gbif-chart-lib.yunikornLabels" . | nindent 10 }}
{{- end }}
    roleGroups:
      default:
{{- if .Values.airflowEnvOverrides }}
{{- "envOverrides:" | nindent 8 }}
{{- tpl (.Values.airflowEnvOverrides | toYaml) . | nindent 10 }}
{{- end }}
        replicas: {{ .Values.nodes.workers.replicas }}
        config:
          resources:
            cpu: 
              min: {{ .Values.nodes.workers.cpu.min }}
              max: {{ .Values.nodes.workers.cpu.max }}
            memory: 
              limit: {{ .Values.nodes.workers.memory }}
{{- if .Values.logging.enabled  }}
          logging:
            enableVectorAgent: true
            containers:
              vector:
                file:
                  level: {{ .Values.logging.vectorLogLevel }}
              airflow:
                console:
                  level: {{ .Values.nodes.workers.logLevel }}
                file:
                  level: {{ .Values.nodes.workers.logLevel }}
                loggers:
                  "airflow.processor":
                    level: {{ .Values.nodes.workers.logLevel }}
{{- end }}
  schedulers:
{{- if .Values.yunikorn.enabled }}
    podOverrides:
      metadata:
        labels:
{{- include "gbif-chart-lib.yunikornLabels" . | nindent 10 }}
{{- end }}
    roleGroups:
      default:
{{- if .Values.airflowEnvOverrides }}
{{- "envOverrides:" | nindent 8 }}
{{- tpl (.Values.airflowEnvOverrides | toYaml) . | nindent 10 }}
{{- end }}
        replicas: {{ .Values.nodes.schedulers.replicas }}
        config:
          resources:
            cpu: 
              min: {{ .Values.nodes.schedulers.cpu.min }}
              max: {{ .Values.nodes.schedulers.cpu.max }}
            memory: 
              limit: {{ .Values.nodes.schedulers.memory }}
{{- if .Values.logging.enabled  }}
          logging:
            enableVectorAgent: true
            containers:
              vector:
                file:
                  level: {{ .Values.logging.vectorLogLevel }}
              airflow:
                console:
                  level: {{ .Values.nodes.schedulers.logLevel }}
                file:
                  level: {{ .Values.nodes.schedulers.logLevel }}
                loggers:
                  "airflow.processor_manager":
                    level: {{ .Values.nodes.schedulers.logLevel }}
{{- end }}