apiVersion: airflow.stackable.tech/v1alpha1
kind: AirflowCluster
metadata:
  name: {{ include "gbif-chart-lib.name" . }}
spec:
  image:
{{- if .Values.customImage }}
    productVersion: {{ .Values.stackProduct }}
    custom: {{ .Values.customImage.repository }}/{{ .Values.customImage.image }}:{{ .Values.customImage.tag }}
{{- else }}
    productVersion: {{ default .Chart.AppVersion .Values.stackProduct }}
    stackableVersion: {{ default "23.1.0" .Values.stackVersion }}
{{- end }}
  clusterConfig:
    statsdExporterVersion: v{{ .Values.statsdVersion }}
    executor: {{ .Values.executor }}
    loadExamples: {{ .Values.examples }}
    exposeConfig: {{ .Values.exposeConfigs }}
    credentialsSecret: {{ include "gbif-chart-lib.name" . }}-credentials
{{- if .Values.git }}
    dagsGitSync: 
      - repo: {{ .Values.git.repository }} 
        branch: {{ .Values.git.branch }}
        gitFolder: {{ .Values.git.dagFolder }} 
        depth: {{ .Values.git.depth }}
        wait: {{ .Values.git.wait }}
{{- if .Values.git.secret }}
        credentialsSecret: .Values.git.secret
{{- end }}
        gitSyncConf: 
          --rev: HEAD 
{{- end }}
{{- if .Values.logging.enabled  }}     
    vectorAggregatorConfigMapName: {{ .Values.logging.discoveryMap }}
{{- end }}
  webservers:
    roleGroups:
      default:
{{- if .Values.airflowEnvOverrides }}
{{- "envOverrides:" | nindent 8 }}
{{- tpl (.Values.airflowEnvOverrides | toYaml) . | nindent 10 }}
{{- end }}
        replicas: {{ .Values.nodes.webservers.replicas }}
        config:
          resources:
            cpu: 
              min: {{ .Values.nodes.webservers.cpu.min }}
              max: {{ .Values.nodes.webservers.cpu.max }}
            memory: 
              limit: {{ .Values.nodes.webservers.memory }}
{{- if .Values.logging.enabled  }}
          logging:
            enableVectorAgent: true
            containers:
              vector:
                file:
                  level: {{ .Values.logging.vectorLogLevel }}
              airflow:
                console:
                  level: {{ .Values.nodes.webservers.logLevel }}
                file:
                  level: {{ .Values.nodes.webservers.logLevel }}
                loggers:
                  "flask_appbuilder":
                    level: {{ .Values.nodes.webservers.logLevel }}
{{- end }}
  workers:
    roleGroups:
      default:
{{- if .Values.airflowEnvOverrides }}
{{- "envOverrides:" | nindent 8 }}
{{- tpl (.Values.airflowEnvOverrides | toYaml) . | nindent 10 }}
{{- end }}
        replicas: {{ .Values.nodes.workers.replicas }}
        config:
          resources:
            cpu: 
              min: {{ .Values.nodes.workers.cpu.min }}
              max: {{ .Values.nodes.workers.cpu.max }}
            memory: 
              limit: {{ .Values.nodes.workers.memory }}
{{- if .Values.logging.enabled  }}
          logging:
            enableVectorAgent: true
            containers:
              vector:
                file:
                  level: {{ .Values.logging.vectorLogLevel }}
              airflow:
                console:
                  level: {{ .Values.nodes.workers.logLevel }}
                file:
                  level: {{ .Values.nodes.workers.logLevel }}
                loggers:
                  "airflow.processor":
                    level: {{ .Values.nodes.workers.logLevel }}
{{- end }}
  schedulers:
    roleGroups:
      default:
{{- if .Values.airflowEnvOverrides }}
{{- "envOverrides:" | nindent 8 }}
{{- tpl (.Values.airflowEnvOverrides | toYaml) . | nindent 10 }}
{{- end }}
        replicas: {{ .Values.nodes.schedulers.replicas }}
        config:
          resources:
            cpu: 
              min: {{ .Values.nodes.schedulers.cpu.min }}
              max: {{ .Values.nodes.schedulers.cpu.max }}
            memory: 
              limit: {{ .Values.nodes.schedulers.memory }}
{{- if .Values.logging.enabled  }}
          logging:
            enableVectorAgent: true
            containers:
              vector:
                file:
                  level: {{ .Values.logging.vectorLogLevel }}
              airflow:
                console:
                  level: {{ .Values.nodes.schedulers.logLevel }}
                file:
                  level: {{ .Values.nodes.schedulers.logLevel }}
                loggers:
                  "airflow.processor_manager":
                    level: {{ .Values.nodes.schedulers.logLevel }}
{{- end }}