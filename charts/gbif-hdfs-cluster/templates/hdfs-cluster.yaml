apiVersion: hdfs.stackable.tech/v1alpha1
kind: HdfsCluster
metadata:
  name: {{ include "gbif-chart-lib.name" . }}
spec:
  image:
    productVersion: {{ default .Chart.AppVersion .Values.stackProduct }}
    stackableVersion: {{ default "0.3.0" .Values.stackVersion }}
  zookeeperConfigMapName: {{ .Values.zookeeperClusterName }}
  dfsReplication: {{ .Values.dataReplication }}
  nameNodes:
    roleGroups:
      default:
        replicas: {{ .Values.nodes.name.replicas }}
        config:
          resources:
            cpu:
              max: {{ .Values.nodes.name.cpu.max }}
              min: {{ .Values.nodes.name.cpu.min }}
            storage:
              data:
                capacity: {{ .Values.nodes.name.storage.capacity }}
            memory:
              limit: {{ .Values.nodes.name.memory }}
  dataNodes:
    roleGroups:
      default:
        replicas: {{ .Values.nodes.data.replicas }}
        config:
          resources:
            cpu:
              max: {{ .Values.nodes.data.cpu.max }}
              min: {{ .Values.nodes.data.cpu.min }}
            {{- if gt (len .Values.nodes.data.storage.drives) 0 }}
            storage:
              data:
                count: 0 # Setting count to 0 disables the default PVCs
              hard-disks:
                count: {{ len .Values.nodes.data.storage.drives }}
                capacity: {{ .Values.nodes.data.storage.capacity }} # Currently the same for all disks but in the future it could easily be different for different types of disks
                storageClass: {{ .Values.nodes.data.storage.class }}
                hdfsStorageType: {{ .Values.nodes.data.storage.type }}
            memory:
              limit: {{ .Values.nodes.data.memory }}
            {{- end }}
  journalNodes:
    roleGroups:
      default:
        replicas: {{ .Values.nodes.journal.replicas }}
        config:
          resources:
            cpu:
              max: {{ .Values.nodes.journal.cpu.max }}
              min: {{ .Values.nodes.journal.cpu.min }}
            storage:
              data:
                capacity: {{ .Values.nodes.journal.storage.capacity }}
            memory:
              limit: {{ .Values.nodes.journal.memory }}