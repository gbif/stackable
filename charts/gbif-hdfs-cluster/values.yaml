# Default values for GBIF HDFS cluster using Stackable HDFS operator.

# Override name of the cluster
nameOverride: ""
# Override fullname of the cluster
fullnameOverride: ""

# Stackable versioning to override the version of the Stack component.
stackProduct: "3.3.4"
stackVersion: "23.1.0"

# Name of the zookeeper cluster
zookeeperClusterName: "gbif-zookeeper"

# Number of times data should be replicated in the HDFS cluster
dataReplication: 2

# Controls if the datanode should use hostname to resolve each others addresses. 
# Used so clients outside the cluster can resolve the IPs locally instead of the internal IPs of the Kubernetes cluster.
useDataNodeHostName: "true"

# Value for enabling node affinity.
# A specific label is used on the nodes to indicate if namenode and/or datanode should be running on the node
# It is done in case you need a specific range of servers to expose the nodes outside the cluster
# For making node available for nodename, add label namenodes=enabled to the node
# For making node available for datanode, add label datanodes=enabled to the node
useNodeAffinity: true

nodes:
  datanode:
    replicas: 1
    cpu:
      min: '100m'
      max: '1000m'
    memory: '2Gi'
    # The storage structure allows for defining node specific drives created by the cluster administrator
    # If you want to let the cluster deploy the storage, you can do the following:
    # storage:
    #   capacity: '50Gi'
    storage:
      drives: []
      labels: []
      class: hdfs-datanode-storage
      capacity: '100Gi'
      type: "Disk"
    #Allow for specifying nodeports for exposing the pods to VMs outside the kubenetes cluster on the internal network
    ports:
      tcp:
        appPort: 9864
        nodePort: 
      icp:
        appPort: 9867
        nodePort: 
      data:
        appPort: 9866
        nodePort: 
    # List of IPs hosting the specific nodes.
    # Example node1 host datanode2 and node2 host datanode1
    # Then it should look like:
    # - ips:
    #   - node2_ip
    #   - node1_ip
    ips: []
  namenode:
    replicas: 1
    cpu:
      min: '100m'
      max: '2000m'
    memory: '3Gi'
    storage:
      capacity: '15Gi'
    #Allow for specifying nodeports for exposing the pods to VMs outside the kubenetes cluster on the internal network
    ports:
      tcp:
        appPort: 9870
        nodePort: 
      rpc:
        appPort: 8020
        nodePort: 
    # List of IPs hosting the specific nodes.
    # Example node1 host namenode2 and node2 host namenode1
    # Then it should look like:
    # - ips:
    #   - node2_ip
    #   - node1_ip
    ips: []
  journalnode:
    replicas: 3
    cpu:
      min: '100m'
      max: '2000m'
    memory: '2Gi'
    storage:
      capacity: '15Gi'
    ports: []
    ips: []