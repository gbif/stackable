# Default values for GBIF Hive metastore using Stackable hive operator.

# Override name of the cluster
nameOverride: ""
# Override fullname of the cluster
fullnameOverride: ""

# Stackable versioning to override the version of the Stack component.
stackProduct: "3.1.3"
stackVersion: "24.3.0"

# Uses the stackProduct value to tell the operator what version of configurations to use with the custom image
# custom image allows customer to change the repository if they want to their own acting as a proxy or
# use an extended version of the image
# Example of how to set custom image
# customImage: 
#  enabled: true
#  repository: docker.gbif.org/your-team
#  extended:
#    enabled: true
#    image: a-extended-stackable-image
#    tag: "1.0.5"
customImage:
  enabled: false

# Name of the HDFS cluster
hdfsClusterName: "gbif-hdfs"

# Using more than 1 replica or using a different default service naming scheme, set the thrift url manually
thriftUrl: ""

# Use for setting the warehouse location
warehouse: "/gbif/warehouse"

# Listenerclass for the stackable component
listenerClass: "cluster-internal"

# Enable logging via the vector aggregator
# Needs the name of configmap for discovery of the aggregator
logging:
  # property for enable vector logging
  enabled: false
  # DisoveryMap for the connection the aggregator pod
  discoveryMap: "gbif-vector-aggregator-discovery"
  # Configured which vector itself logs on its own.
  vectorLogLevel: "WARN"

# Support for Yunikorn queuing
# By default it is disabled.
# The idea with enabling yunikorn for components is that we can fence the infrastructure components from works done in Spark, Trino etc.
yunikorn:
  enabled: false
  # Name of the overall application for all the pods within the queue
  appId: "hive-metastore"
  # Queue to place the pods in
  queue: "root.namespace.infra"

nodes:
  metastore:
    replicas: 1
    cpu:
      min: '100m'
      max: '4000m'
    memory: '4Gi'
    storage:
      capacity: '10Gi'
    logLevel: "INFO"

# Connection to Hive's postgres DB
hiveDB:
  db: ""
  name: ""
  user: ""
  password: ""