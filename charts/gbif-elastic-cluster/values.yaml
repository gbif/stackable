# Override name of the cluster
nameOverride: ""
# Override fullname of the cluster
fullnameOverride: ""

memoryPagingAllow: true

# users that should be created for the cluster at creation
# example of who it could look:
# customUsers:
# - name: test1
#   password: test1Password
#   roles: "a_role"
# - name: test2
#   password: test2Password
#   roles: another_role,a_third_role

customUsers: []

# Roles that should be created for the cluster at creation
# WIP simple structure for a single role so no example yet

customRoles: []

ingress:
  enabled: false
  # Domain to create the ingress entry with
  domain: example.org

nodes:
  manager:
    replicas: 1
    resources:
      cpu:
        min: '500m'
        max: '2000m'
      memory: 3072
      storage:
        class: local-path
        capacity: '25Gi'
    ports: {}
    # Example of how nodeAffinity could look
    # nodeAffinity: 
    #   requiredDuringSchedulingIgnoredDuringExecution:
    #     nodeSelectorTerms:
    #     - matchExpressions:
    #       - key: elastic
    #         operator: In
    #         values:
    #         - enabled
    nodeAffinity: {}
    # Example of how podAntiAffinity could look
    # podAntiAffinity:
    #   requiredDuringSchedulingIgnoredDuringExecution:
    #   - labelSelector:
    #       matchLabels:
    #         app.kubernetes.io/name: elastic
    #         app.kubernetes.io/instance: gbif-elastic-cluster
    #         app.kubernetes.io/component: manager
    #     topologyKey: kubernetes.io/hostname
    podAntiAffinity: {}
  worker:
    replicas: 1
    resources:
      cpu:
        min: '1000m'
        max: '4000m'
      memory: 4096
      storage:
        drives: []
        labels: []
        class: elastic-storage
        capacity: '100Gi'
    ports: {}
    # Example of how nodeAffinity could look
    # nodeAffinity: 
    #   requiredDuringSchedulingIgnoredDuringExecution:
    #     nodeSelectorTerms:
    #     - matchExpressions:
    #       - key: elastic
    #         operator: In
    #         values:
    #         - enabled
    nodeAffinity: {}
    # Example of how podAntiAffinity could look
    # podAntiAffinity:
    #   requiredDuringSchedulingIgnoredDuringExecution:
    #   - labelSelector:
    #       matchLabels:
    #         app.kubernetes.io/name: elastic
    #         app.kubernetes.io/instance: gbif-elastic-cluster
    #         app.kubernetes.io/component: worker
    #     topologyKey: kubernetes.io/hostname
    podAntiAffinity: {}
  kibana:
    replicas: 1
    resources:
      cpu:
        min: '500m'
        max: '2000m'
      memory: 2048
    ports: {}