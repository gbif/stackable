apiVersion: hbase.stackable.tech/v1alpha1
kind: HbaseCluster
metadata:
  name: {{ include "gbif-chart-lib.name" . }}
spec:
  image:
    productVersion: {{ default .Chart.AppVersion .Values.stackProduct }}
    stackableVersion: {{ default "23.1.0" .Values.stackVersion }}
  clusterConfig:
    hdfsConfigMapName: {{ .Values.hdfsClusterName }}
    zookeeperConfigMapName: {{ .Values.zookeeperClusterName }}-znode
{{- if .Values.logging.enabled  }}     
    vectorAggregatorConfigMapName: {{ .Values.logging.discoveryMap }}
{{- end }}
  masters:
    configOverrides:
      hbase-site.xml:
        hbase.rootdir: hdfs://{{ .Values.hdfsClusterName }}{{ .Values.hbaseRootDirectory }}
    roleGroups:
      default:
        replicas: {{ .Values.nodes.master.replicas }}
        config:
          resources:
            cpu:
              max: {{ .Values.nodes.master.cpu.max }}
              min: {{ .Values.nodes.master.cpu.min }}
            storage:
              data:
                capacity: {{ .Values.nodes.master.storage.capacity }}
            memory:
              limit: {{ .Values.nodes.master.memory }}
{{- if .Values.logging.enabled  }}
          logging:
            enableVectorAgent: true
            containers:
              vector:
                file:
                  level: {{ .Values.logging.vectorLogLevel }}
              hbase:
                console:
                  level: {{ .Values.nodes.master.logLevel }}
                file:
                  level: {{ .Values.nodes.master.logLevel }}
                loggers:
                  ROOT:
                    level: {{ .Values.nodes.master.logLevel }}
{{- end }}
  regionServers:
    config:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app.kubernetes.io/name: hbase
                app.kubernetes.io/instance: {{ include "gbif-chart-lib.name" . }}
                app.kubernetes.io/component: regionserver
            topologyKey: kubernetes.io/hostname
    configOverrides:
      hbase-site.xml:
        hbase.rootdir: hdfs://{{ .Values.hdfsClusterName }}{{ .Values.hbaseRootDirectory }}
    roleGroups:
      default:
        replicas: {{ .Values.nodes.region.replicas }}
        config:
          resources:
            cpu:
              max: {{ .Values.nodes.region.cpu.max }}
              min: {{ .Values.nodes.region.cpu.min }}
            storage:
              data:
                capacity: {{ .Values.nodes.region.storage.capacity }}
            memory:
              limit: {{ .Values.nodes.region.memory }}
{{- if .Values.logging.enabled  }}
          logging:
            enableVectorAgent: true
            containers:
              vector:
                file:
                  level: {{ .Values.logging.vectorLogLevel }}
              hbase:
                console:
                  level: {{ .Values.nodes.region.logLevel }}
                file:
                  level: {{ .Values.nodes.region.logLevel }}
                loggers:
                  ROOT:
                    level: {{ .Values.nodes.region.logLevel }}
{{- end }}
  restServers:
    configOverrides:
      hbase-site.xml:
        hbase.rootdir: hdfs://{{ .Values.hdfsClusterName }}{{ .Values.hbaseRootDirectory }}
    roleGroups:
      default:
        replicas: {{ .Values.nodes.rest.replicas }}
        config:
          resources:
            cpu:
              max: {{ .Values.nodes.rest.cpu.max }}
              min: {{ .Values.nodes.rest.cpu.min }}
            storage:
              data:
                capacity: {{ .Values.nodes.rest.storage.capacity }}
            memory:
              limit: {{ .Values.nodes.rest.memory }}
{{- if .Values.logging.enabled  }}
          logging:
            enableVectorAgent: true
            containers:
              vector:
                file:
                  level: {{ .Values.logging.vectorLogLevel }}
              hbase:
                console:
                  level: {{ .Values.nodes.rest.logLevel }}
                file:
                  level: {{ .Values.nodes.rest.logLevel }}
                loggers:
                  ROOT:
                    level: {{ .Values.nodes.rest.logLevel }}
{{- end }}